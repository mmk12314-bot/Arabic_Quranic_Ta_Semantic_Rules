def apply_semantic_ta_correction(text_output):
    """
    تطبق القاعدة الدلالية للتاء المفتوحة/المربوطة على نص مُولّد.
    تعتمد على مؤشرات التعيين (الإضافة إلى المعرَّف بأنواعه).
    
    Parameters:
    - text_output (str): النص المراد فحصه وتصحيحه (عادة يكون ناتج نموذج AI).
    
    Returns:
    - str: النص المصحح وفقاً للقاعدة الدلالية للتاء.
    """
    
    # قائمة الكلمات المرشحة التي يحدث فيها التناوب (بالتاء المربوطة في غير الرسم القرآني)
    candidate_words = ["نعمة", "رحمة", "سنة", "شجرة", "لعنة", "امرأة", "فطرة", "جنة", "بقية", "ابنة", "معصية", "قرة", "كلمة", "غيابة", "سخط", "لات", "جمالت"]
    
    # قائمة بأسماء الأعلام أو الأسماء المعرفة التي قد لا تبدأ بـ "الـ" (لتبسيط الكود)
    # يمكن توسيع هذه القائمة لتشمل أسماء أعلام إضافية.
    known_proper_nouns = ["الله", "نوح", "فرعون", "لوط", "آسيا", "مريم", "إبراهيم", "موسى", "عيسى"]
    
    # قائمة بالضمائر المتصلة التي تجعل الاسم معرفة (يجب أن تتبع الكلمة مباشرة أو بفصل بسيط)
    # (الضمائر المجرورة: ـه، ـها، ـك، ـنا، ـي، ـكم، ـهم، إلخ)
    attached_pronouns = ['هُ', 'هَا', 'كَ', 'نَا', 'يَ', 'كُم', 'هُم', 'كِ', 'هِم', 'هُما']
    
    # تقسيم النص إلى كلمات
    words = text_output.split()
    
    for i in range(len(words)):
        current_word = words[i]
        
        # 1. مطابقة الكلمة المرشحة (بصيغة التاء المربوطة)
        word_base = current_word.strip('ًٌٍَة') + 'ة'
        
        if word_base in candidate_words and 'ة' in current_word:
            
            # 2. التحقق من وجود كلمة تالية (المضاف إليه)
            if i + 1 < len(words):
                next_word = words[i + 1]
                
                # --- الشروط الموسعة للتعيين (المعلوم) ---
                
                # الشرط أ: الإضافة إلى المعرَّف بـ "الـ" (الشرط الأصلي)
                is_defined_by_al = next_word.startswith("ال")
                
                # الشرط ب: الإضافة إلى اسم عَلَم معروف
                # يتم التحقق من تطابق الكلمة التالية مع قائمة الأعلام المعروفة
                is_defined_by_proper_noun = next_word.strip('ًٌٍَةَُِ') in known_proper_nouns
                
                # الشرط ج: الإضافة إلى ضمير متصل بالكلمة نفسها
                # يتم التحقق من نهاية الكلمة الحالية بأحد الضمائر المحددة (مثل: نعمتُه، رحمتُك)
                is_defined_by_suffix_pronoun = any(current_word.endswith(p) for p in attached_pronouns)
                
                # 3. تطبيق التصحيح إذا تحقق أي من شروط التعيين الموسعة
                if is_defined_by_al or is_defined_by_proper_noun or is_defined_by_suffix_pronoun:
                    
                    # 4. تطبيق التصحيح: استبدال التاء المربوطة بالتاء المفتوحة
                    corrected_word = current_word.replace('ة', 'ت', 1)
                    words[i] = corrected_word
                    
    # إعادة تجميع الكلمات إلى نص واحد
    return " ".join(words)
