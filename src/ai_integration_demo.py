# ai_integration_demo.py

# استيراد الدالة الجديدة من ملف ta_corrector.py
from ta_corrector import apply_pragmatic_ta_rule 

def run_tests():
    """
    تشغيل أمثلة اختبارية لإثبات قاعدة التعيين البرغماتي (المعلوم/المجهول).
    """

    print("--- اختبار قاعدة التعيين البرغماتي الجديدة (المعلوم/المجهول) ---")
    print("الهدف: إثبات أن التاء المفتوحة (ت) تظهر عند وجود 'قرينة معلومة' فقط.")
    print("-" * 60)

    # 1. اختبار التعيين الواضح (المعلوم): الرحمة المخصصة بالقسمة الإلهية (ت)
    text1 = "أَهُمْ يَقْسِمُونَ رَحْمَةَ رَبِّكَ"
    result1 = apply_pragmatic_ta_rule(text1)
    
    print(f"النص الأصلي 1 (المعلوم): {text1}")
    print(f"النص المصحح: {result1}")
    print(f"النتيجة المتوقعة: اهم يقسمون رحمت ربك\n")


    # 2. اختبار العموم (المجهول): الرحمة العامة التي لا يعلم كُنهها المخاطب (ة)
    text2 = "إِنَّ رَحْمَةَ اللَّهِ قَرِيبٌ مِّنَ الْمُحْسِنِينَ"
    result2 = apply_pragmatic_ta_rule(text2)
    
    print(f"النص الأصلي 2 (المجهول): {text2}")
    print(f"النص المصحح: {result2}")
    print(f"النتيجة المتوقعة: ان رحمة الله قريب من المحسنين\n")


    # 3. اختبار التعيين بالعدّ (المعلوم): النعمة المحددة والقابلة للعدّ (ت)
    text3 = "وَإِن تَعُدُّوا نِعْمَةَ اللَّهِ لَا تُحْصُوهَا"
    result3 = apply_pragmatic_ta_rule(text3)
    
    print(f"النص الأصلي 3 (المعلوم): {text3}")
    print(f"النص المصحح: {result3}")
    print(f"النتيجة المتوقعة: و ان تعدوا نعمت الله لا تحصوها\n")

    
    # 4. اختبار التعيين بالعَلَم (المعلوم): المرأة المخصصة باسم عَلَم (ت)
    text4 = "فَضَرَبَ اللَّهُ مَثَلًا لِّلَّذِينَ كَفَرُوا امْرَأَةَ نُوحٍ"
    result4 = apply_pragmatic_ta_rule(text4)
    
    print(f"النص الأصلي 4 (المعلوم): {text4}")
    print(f"النص المصحح: {result4}")
    print(f"النتيجة المتوقعة: فضرب الله مثلا للذين كفروا امرأت نوح\n")
    
    
    # 5. اختبار كلمة خارج نطاق التناوب
    text5 = "اقيموا الصلاة"
    result5 = apply_pragmatic_ta_rule(text5)
    
    print(f"النص الأصلي 5 (خارج النطاق): {text5}")
    print(f"النص المصحح: {result5}")
    print(f"النتيجة المتوقعة: اقيموا الصلاة\n")

# --- دالة التشغيل التفاعلي ---

def interactive_mode():
    """
    يسمح للمستخدم بإدخال نص خاص به للتصحيح التلقائي.
    """
    print("=" * 60)
    print("             وضع التشغيل التفاعلي لقاعدة التعيين             ")
    print("=" * 60)
    
    while True:
        user_input = input("أدخل الجملة المراد تصحيحها (أو اكتب 'خروج' للإنهاء): \n")
        
        if user_input.lower().strip() == 'خروج':
            print("شكراً لاستخدام الأداة. وداعاً.")
            break
        
        if user_input.strip():
            corrected_text = apply_pragmatic_ta_rule(user_input)
            print("\n** النص المُصحَّح (وفق قاعدة المعلوم/المجهول): **")
            print(f"** {corrected_text} **\n")
        else:
            print("الرجاء إدخال نص صالح.\n")
    
if __name__ == "__main__":
    run_tests()
    
    # تشغيل الوضع التفاعلي بعد الانتهاء من الاختبارات
    interactive_mode()
